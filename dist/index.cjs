var e=require("chroma-js"),r=require("tailwindcss/colors");function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var t=/*#__PURE__*/n(e),o=/*#__PURE__*/n(r);function i(){return i=Object.assign?Object.assign.bind():function(e){for(var r=1;r<arguments.length;r++){var n=arguments[r];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},i.apply(this,arguments)}function a(e,r){(null==r||r>e.length)&&(r=e.length);for(var n=0,t=new Array(r);n<r;n++)t[n]=e[n];return t}function l(e,r){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(n)return(n=n.call(e)).next.bind(n);if(Array.isArray(e)||(n=function(e,r){if(e){if("string"==typeof e)return a(e,r);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?a(e,r):void 0}}(e))||r&&e&&"number"==typeof e.length){n&&(e=n);var t=0;return function(){return t>=e.length?{done:!0}:{done:!1,value:e[t++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function u(e){return Object.keys(e)}function c(e){return Object.entries(e)}var s=["rgb","lab","lch","lrgb","hcl","num","hcg","oklch","hsi","hsl","hsv","oklab"],f={lerpEnds:!0,interval:25,mode:"lrgb"},d=i({includeBase:!0,includeLegacy:!1},f),p=function(e,r,n){return e&&Object.prototype.hasOwnProperty.call(e,r)&&!n(e[r])},b=function(e){throw new Error(e)},v=function(e){return!(null==e||"object"!=typeof e||Array.isArray(e)||"[object Object]"!==e.toString()||!u(e).every(function(e){return!isNaN(+e)}))},y=function(e,r){var n;void 0===r&&(r={}),p(r,"lerpEnds",function(e){return"boolean"==typeof e})&&b("tailwind-lerp-colors option `lerpEnds` must be a boolean."),p(r,"interval",function(e){return Number.isInteger(e)&&"number"==typeof e&&e>0})&&b("tailwind-lerp-colors option `interval` must be a positive integer greater than 0."),p(r,"mode",function(e){return"string"==typeof e&&s.includes(e)})&&b("tailwind-lerp-colors option `mode` must be one of the following values: "+s.join(", ")+"."),v(e)||b("tailwind-lerp-colors object `shades` must be an object with numeric keys.\n\nvalue used: "+JSON.stringify(e,null,2));var o=i({},f,null!=(n=r)?n:{}),a=o.lerpEnds,l=o.interval,u=o.mode,d=function(e,r){return e[0]-r[0]},y=c(e).map(function(e){var r=e[1];return[Number(e[0]),r]}).sort(d);a&&(y.unshift([0,"#ffffff"]),y.push([1e3,"#000000"]));for(var m=[].concat(y),h=function(){var e,r=y[g],n=r[0],o=r[1],i=y[g+1],a=i[1],c=(i[0]-n)/l-1;if(c<=0||!Number.isInteger(c))return 1;for(var s=t.default.scale([o,a]).mode(u),f=1;f<=c;f++)m.push([n+l*f,(e=f/(c+1),s(e).hex())])},g=0;g<y.length-1;g++)h();return m.sort(d),Object.fromEntries(m)};exports.lerpColor=y,exports.lerpColors=function(e,r){void 0===e&&(e={}),void 0===r&&(r={}),p(r,"includeBase",function(e){return"boolean"==typeof e})&&b("tailwind-lerp-colors option `includeBase` must be a boolean."),p(r,"includeLegacy",function(e){return"boolean"==typeof e})&&b("tailwind-lerp-colors option `includeLegacy` must be a boolean.");var n=["lightBlue","warmGray","trueGray","coolGray","blueGray"],t=i({},d,r),a=t.includeLegacy,s=t.lerpEnds,f=t.interval,m=t.mode,h={};if(t.includeBase)for(var g,j=l(u(o.default));!(g=j()).done;){var w=g.value;n.includes(w)&&!a||(h[w]=o.default[w])}for(var O,E={},A=l(c(i({},h,e)));!(O=A()).done;){var S=O.value,N=S[0],x=S[1];E[""+N]=x,v(x)&&(E[N]=y(x,{lerpEnds:s,interval:f,mode:m}))}return E},exports.validColorModes=s;
//# sourceMappingURL=index.cjs.map
